Docker使用手册
使用环境：
	ubuntu15.10 x64
安装docker：
	apt-get -y install docker.io  #安装docker
	docker -v #查看docker版本
	sudo usermod -aG docker dzb #设置普通用户dzb可以执行docker
	docker run hello-world  #运行官方镜像案例hello_world
	docker pull daocloud.io/library/centos:latest  #官网镜像下载较慢，从中国本地云下载镜像centos
使用：
	docker images   #查看本地已经下载的镜像信息
REPOSITORY                   TAG                 IMAGE ID            CREATED             SIZE
hello-world                  latest              f2a91732366c        3 months ago        1.85 kB
daocloud.io/library/centos   latest              196e0ce0c9fb        6 months ago        197 MB
	docker run -d -i -t 196e0ce0c9fb /bin/bash  #运行image id为 196e0ce0c9fb 的镜像
d5ce12937d7da41000b14b779ebf0918e2da30b92ac86902de1a58708e51fc52	 运行时产生的<ContainerID>
	docker attach d5ce12937d7da41000b14b779ebf0918e2da30b92ac86902de1a58708e51fc52 #登录该虚拟机
	docker ps -a #查看当前运行的docker信息
	docker commit 93a1b9d39683 dus #保存当前到镜像dus  一般不建议使用，定制镜像请使用dockerfile
	docker inspect --format '{{ .NetworkSettings.IPAddress }}' ae7abd783e64  #查看docker镜像ip
	docker inspect <container id>
	docker inspect --format '{{ .NetworkSettings.IPAddress }}' <container-ID>
	docker inspect --format='{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(docker ps -aq) 显示所有容器ip
	docker rm `docker ps -a |awk -F' ' '{print$1}'|grep -v CONTAINER` 删除所有容器
Docker可视化管理工具Shipyard安装与配置
	https://www.linuxidc.com/Linux/2017-11/148384.htm

Dockerfile语法
Dockerfile文件
FROM 镜像名
RUN 命令。。。
1.所谓定制镜像，那一定是以一个镜像为基础，在其上进行定制。就像我们之前运行了一个nginx镜像的容器，再进行修改一样，基础镜像是必须指定的。而FROM就是指定基础镜像，因此一个Dockerfile中FROM是必备的指令，并且必须是第一条指令。
知识点：
	镜像：可以分层保存，如基于第一层（原始镜像）创建的第二层（配置了ip），基于第二层的第三层（配置了应用）
	下载也是一层一层下载，先下载第一层，在下载第二层，下载过程中会给出每一层的id前12位  每一层镜像只会出现一次，不应该手动删除，否则上层镜像无法使用
	docker checkpoint
	
	
镜像、容器、仓库
镜像相当于类，容器相当于实例，镜像定义了一个系统，容器是运行时的系统
1.每一个容器运行时，是以镜像为基础层，在其上创建一个当前容器的存储层，我们可以称这个为容器运行时读写而准备的存储层为容器存储层。
2.容器不应该向其存储层内写入任何数据，容器存储层要保持无状态化。所有的文件写入操作，都应该使用数据卷（Volume）、或者
  绑定宿主目录，在这些位置的读写会跳过容器存储层，直接对宿主(或网络存储)发生读写，其性能和稳定性更高。
3.使用数据卷后，容器可以随意删除、重新run，数据却不会丢失。
4.下载镜像也是一层层的去下载，并非单一文件。下载过程中给出了每一层的ID的前12位。并且下载结束后，给出该镜像完整的sha256的摘要，以确保下载一致性。
docker下载源码
	git clone git@github.com:docker_user/docker_practice.git
	cd docker_practice
	git config user.name "yourname"
	git config user.email "your email"
	
	
	git commit -am "Fix issue #1:change helo to hello" #提交更改记录
	git push
	
	others
	git remote add upstream https://github.com/yeasy/docker_practice
	git fetch upstream
	git checkout master
	git rebase upstream/master
	git push -f origin master