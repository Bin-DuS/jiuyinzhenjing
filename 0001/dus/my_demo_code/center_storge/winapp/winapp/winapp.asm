; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	E:\dus\branches\my_demo_code\center_storge\winapp\winapp\winapp.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?hInst@@3PAUHINSTANCE__@@A			; hInst
PUBLIC	?szTitle@@3PADA					; szTitle
PUBLIC	?szWindowClass@@3PADA				; szWindowClass
_BSS	SEGMENT
?hInst@@3PAUHINSTANCE__@@A DD 01H DUP (?)		; hInst
?szTitle@@3PADA DB 064H DUP (?)				; szTitle
?szWindowClass@@3PADA DB 064H DUP (?)			; szWindowClass
_BSS	ENDS
PUBLIC	?InitInstance@@YAHPAUHINSTANCE__@@H@Z		; InitInstance
PUBLIC	??_C@_0N@LIBEBBIN@?$LM?$KP?V?P?$LE?f?$LE?$KC?O?$LF?M?$LD?$AA@ ; `string'
PUBLIC	?GetAppFullName@@YAHPAD@Z			; GetAppFullName
PUBLIC	?MyRegisterClass@@YAGPAUHINSTANCE__@@@Z		; MyRegisterClass
PUBLIC	__$ArrayPad$
PUBLIC	_WinMain@16
EXTRN	__imp__DispatchMessageA@4:PROC
EXTRN	__imp__TranslateMessage@4:PROC
EXTRN	__imp__TranslateAcceleratorA@12:PROC
EXTRN	__imp__GetMessageA@16:PROC
EXTRN	__imp__LoadAcceleratorsA@8:PROC
EXTRN	__imp__MessageBoxA@16:PROC
EXTRN	__imp__LoadStringA@16:PROC
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__RTC_InitBase:PROC
;	COMDAT ??_C@_0N@LIBEBBIN@?$LM?$KP?V?P?$LE?f?$LE?$KC?O?$LF?M?$LD?$AA@
; File e:\dus\branches\my_demo_code\center_storge\winapp\winapp\winapp.cpp
CONST	SEGMENT
??_C@_0N@LIBEBBIN@?$LM?$KP?V?P?$LE?f?$LE?$KC?O?$LF?M?$LD?$AA@ DB 0bcH, 0afH
	DB	0d6H, 0d0H, 0b4H, 0e6H, 0b4H, 0a2H, 0cfH, 0b5H, 0cdH, 0b3H, 00H ; `string'
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
; Function compile flags: /Odtp /RTCsu /ZI
rtc$IMZ	ENDS
;	COMDAT _WinMain@16
_TEXT	SEGMENT
_path$ = -2104						; size = 2048
_hAccelTable$ = -48					; size = 4
_msg$ = -36						; size = 28
__$ArrayPad$ = -4					; size = 4
_hInstance$ = 8						; size = 4
_hPrevInstance$ = 12					; size = 4
_lpCmdLine$ = 16					; size = 4
_nCmdShow$ = 20						; size = 4
_WinMain@16 PROC					; COMDAT
; Line 30
	push	ebp
	mov	ebp, esp
	sub	esp, 2300				; 000008fcH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-2300]
	mov	ecx, 575				; 0000023fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 39
	mov	esi, esp
	push	100					; 00000064H
	push	OFFSET ?szTitle@@3PADA			; szTitle
	push	103					; 00000067H
	mov	eax, DWORD PTR _hInstance$[ebp]
	push	eax
	call	DWORD PTR __imp__LoadStringA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 40
	mov	esi, esp
	push	100					; 00000064H
	push	OFFSET ?szWindowClass@@3PADA		; szWindowClass
	push	109					; 0000006dH
	mov	eax, DWORD PTR _hInstance$[ebp]
	push	eax
	call	DWORD PTR __imp__LoadStringA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 41
	mov	eax, DWORD PTR _hInstance$[ebp]
	push	eax
	call	?MyRegisterClass@@YAGPAUHINSTANCE__@@@Z	; MyRegisterClass
	add	esp, 4
; Line 47
	lea	eax, DWORD PTR _path$[ebp]
	push	eax
	call	?GetAppFullName@@YAHPAD@Z		; GetAppFullName
	add	esp, 4
; Line 48
	mov	esi, esp
	push	0
	push	OFFSET ??_C@_0N@LIBEBBIN@?$LM?$KP?V?P?$LE?f?$LE?$KC?O?$LF?M?$LD?$AA@
	lea	eax, DWORD PTR _path$[ebp]
	push	eax
	push	0
	call	DWORD PTR __imp__MessageBoxA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 55
	mov	eax, DWORD PTR _nCmdShow$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hInstance$[ebp]
	push	ecx
	call	?InitInstance@@YAHPAUHINSTANCE__@@H@Z	; InitInstance
	add	esp, 8
	test	eax, eax
	jne	SHORT $LN4@WinMain
; Line 57
	xor	eax, eax
	jmp	SHORT $LN5@WinMain
$LN4@WinMain:
; Line 60
	mov	esi, esp
	push	109					; 0000006dH
	mov	eax, DWORD PTR _hInstance$[ebp]
	push	eax
	call	DWORD PTR __imp__LoadAcceleratorsA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hAccelTable$[ebp], eax
$LN3@WinMain:
; Line 63
	mov	esi, esp
	push	0
	push	0
	push	0
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__GetMessageA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@WinMain
; Line 65
	mov	esi, esp
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hAccelTable$[ebp]
	push	ecx
	mov	edx, DWORD PTR _msg$[ebp]
	push	edx
	call	DWORD PTR __imp__TranslateAcceleratorA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN1@WinMain
; Line 67
	mov	esi, esp
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__TranslateMessage@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 68
	mov	esi, esp
	lea	eax, DWORD PTR _msg$[ebp]
	push	eax
	call	DWORD PTR __imp__DispatchMessageA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@WinMain:
; Line 70
	jmp	SHORT $LN3@WinMain
$LN2@WinMain:
; Line 72
	mov	eax, DWORD PTR _msg$[ebp+8]
$LN5@WinMain:
; Line 73
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@WinMain
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 2300				; 000008fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	2
$LN10@WinMain:
	DD	2
	DD	$LN9@WinMain
$LN9@WinMain:
	DD	-36					; ffffffdcH
	DD	28					; 0000001cH
	DD	$LN7@WinMain
	DD	-2104					; fffff7c8H
	DD	2048					; 00000800H
	DD	$LN8@WinMain
$LN8@WinMain:
	DB	112					; 00000070H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	104					; 00000068H
	DB	0
$LN7@WinMain:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	0
_WinMain@16 ENDP
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	__imp__strcpy_s:PROC
EXTRN	__imp__GetModuleFileNameA@12:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?GetAppFullName@@YAHPAD@Z
_TEXT	SEGMENT
_tmpname$ = -2056					; size = 2048
__$ArrayPad$ = -4					; size = 4
_path$ = 8						; size = 4
?GetAppFullName@@YAHPAD@Z PROC				; GetAppFullName, COMDAT
; Line 75
	push	ebp
	mov	ebp, esp
	sub	esp, 2252				; 000008ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-2252]
	mov	ecx, 563				; 00000233H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 77
	mov	esi, esp
	push	1024					; 00000400H
	lea	eax, DWORD PTR _tmpname$[ebp]
	push	eax
	push	0
	call	DWORD PTR __imp__GetModuleFileNameA@12
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 78
	mov	esi, esp
	lea	eax, DWORD PTR _tmpname$[ebp]
	push	eax
	push	2048					; 00000800H
	mov	ecx, DWORD PTR _path$[ebp]
	push	ecx
	call	DWORD PTR __imp__strcpy_s
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 79
	xor	eax, eax
; Line 80
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@GetAppFull
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 2252				; 000008ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@GetAppFull:
	DD	1
	DD	$LN4@GetAppFull
$LN4@GetAppFull:
	DD	-2056					; fffff7f8H
	DD	2048					; 00000800H
	DD	$LN3@GetAppFull
$LN3@GetAppFull:
	DB	116					; 00000074H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
?GetAppFullName@@YAHPAD@Z ENDP				; GetAppFullName
_TEXT	ENDS
PUBLIC	?WndProc@@YGJPAUHWND__@@IIJ@Z			; WndProc
EXTRN	__imp__RegisterClassExA@4:PROC
EXTRN	__imp__LoadCursorA@8:PROC
EXTRN	__imp__LoadIconA@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?MyRegisterClass@@YAGPAUHINSTANCE__@@@Z
_TEXT	SEGMENT
_wcex$ = -52						; size = 48
_hInstance$ = 8						; size = 4
?MyRegisterClass@@YAGPAUHINSTANCE__@@@Z PROC		; MyRegisterClass, COMDAT
; Line 97
	push	ebp
	mov	ebp, esp
	sub	esp, 248				; 000000f8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-248]
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 100
	mov	DWORD PTR _wcex$[ebp], 48		; 00000030H
; Line 102
	mov	DWORD PTR _wcex$[ebp+4], 3
; Line 103
	mov	DWORD PTR _wcex$[ebp+8], OFFSET ?WndProc@@YGJPAUHWND__@@IIJ@Z ; WndProc
; Line 104
	mov	DWORD PTR _wcex$[ebp+12], 0
; Line 105
	mov	DWORD PTR _wcex$[ebp+16], 0
; Line 106
	mov	eax, DWORD PTR _hInstance$[ebp]
	mov	DWORD PTR _wcex$[ebp+20], eax
; Line 107
	mov	esi, esp
	push	107					; 0000006bH
	mov	eax, DWORD PTR _hInstance$[ebp]
	push	eax
	call	DWORD PTR __imp__LoadIconA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _wcex$[ebp+24], eax
; Line 108
	mov	esi, esp
	push	32512					; 00007f00H
	push	0
	call	DWORD PTR __imp__LoadCursorA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _wcex$[ebp+28], eax
; Line 109
	mov	DWORD PTR _wcex$[ebp+32], 6
; Line 110
	mov	DWORD PTR _wcex$[ebp+36], 109		; 0000006dH
; Line 111
	mov	DWORD PTR _wcex$[ebp+40], OFFSET ?szWindowClass@@3PADA ; szWindowClass
; Line 112
	mov	esi, esp
	push	108					; 0000006cH
	mov	eax, DWORD PTR _wcex$[ebp+20]
	push	eax
	call	DWORD PTR __imp__LoadIconA@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _wcex$[ebp+44], eax
; Line 114
	mov	esi, esp
	lea	eax, DWORD PTR _wcex$[ebp]
	push	eax
	call	DWORD PTR __imp__RegisterClassExA@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 115
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@MyRegister
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 248				; 000000f8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@MyRegister:
	DD	1
	DD	$LN4@MyRegister
$LN4@MyRegister:
	DD	-52					; ffffffccH
	DD	48					; 00000030H
	DD	$LN3@MyRegister
$LN3@MyRegister:
	DB	119					; 00000077H
	DB	99					; 00000063H
	DB	101					; 00000065H
	DB	120					; 00000078H
	DB	0
?MyRegisterClass@@YAGPAUHINSTANCE__@@@Z ENDP		; MyRegisterClass
_TEXT	ENDS
EXTRN	__imp__UpdateWindow@4:PROC
EXTRN	__imp__ShowWindow@8:PROC
EXTRN	__imp__CreateWindowExA@48:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?InitInstance@@YAHPAUHINSTANCE__@@H@Z
_TEXT	SEGMENT
_hWnd$ = -8						; size = 4
_hInstance$ = 8						; size = 4
_nCmdShow$ = 12						; size = 4
?InitInstance@@YAHPAUHINSTANCE__@@H@Z PROC		; InitInstance, COMDAT
; Line 128
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 131
	mov	eax, DWORD PTR _hInstance$[ebp]
	mov	DWORD PTR ?hInst@@3PAUHINSTANCE__@@A, eax ; hInst
; Line 134
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _hInstance$[ebp]
	push	eax
	push	0
	push	0
	push	0
	push	-2147483648				; 80000000H
	push	0
	push	-2147483648				; 80000000H
	push	13565952				; 00cf0000H
	push	OFFSET ?szTitle@@3PADA			; szTitle
	push	OFFSET ?szWindowClass@@3PADA		; szWindowClass
	push	0
	call	DWORD PTR __imp__CreateWindowExA@48
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hWnd$[ebp], eax
; Line 136
	cmp	DWORD PTR _hWnd$[ebp], 0
	jne	SHORT $LN1@InitInstan
; Line 138
	xor	eax, eax
	jmp	SHORT $LN2@InitInstan
$LN1@InitInstan:
; Line 141
	mov	esi, esp
	mov	eax, DWORD PTR _nCmdShow$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__ShowWindow@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 142
	mov	esi, esp
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__UpdateWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 144
	mov	eax, 1
$LN2@InitInstan:
; Line 145
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?InitInstance@@YAHPAUHINSTANCE__@@H@Z ENDP		; InitInstance
_TEXT	ENDS
PUBLIC	?About@@YGHPAUHWND__@@IIJ@Z			; About
PUBLIC	__$ArrayPad$
EXTRN	__imp__PostQuitMessage@4:PROC
EXTRN	__imp__EndPaint@8:PROC
EXTRN	__imp__BeginPaint@8:PROC
EXTRN	__imp__DefWindowProcA@16:PROC
EXTRN	__imp__DestroyWindow@4:PROC
EXTRN	__imp__DialogBoxParamA@20:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?WndProc@@YGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
tv72 = -308						; size = 4
tv64 = -308						; size = 4
_hdc$ = -108						; size = 4
_ps$ = -96						; size = 64
_wmEvent$ = -24						; size = 4
_wmId$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_hWnd$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?WndProc@@YGJPAUHWND__@@IIJ@Z PROC			; WndProc, COMDAT
; Line 158
	push	ebp
	mov	ebp, esp
	sub	esp, 308				; 00000134H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-308]
	mov	ecx, 77					; 0000004dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
; Line 163
	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 2
	je	$LN2@WndProc
	cmp	DWORD PTR tv64[ebp], 15			; 0000000fH
	je	$LN3@WndProc
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	SHORT $LN9@WndProc
	jmp	$LN1@WndProc
$LN9@WndProc:
; Line 166
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	mov	DWORD PTR _wmId$[ebp], ecx
; Line 167
	mov	eax, DWORD PTR _wParam$[ebp]
	shr	eax, 16					; 00000010H
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	mov	DWORD PTR _wmEvent$[ebp], ecx
; Line 169
	mov	eax, DWORD PTR _wmId$[ebp]
	mov	DWORD PTR tv72[ebp], eax
	cmp	DWORD PTR tv72[ebp], 104		; 00000068H
	je	SHORT $LN6@WndProc
	cmp	DWORD PTR tv72[ebp], 105		; 00000069H
	je	SHORT $LN5@WndProc
	jmp	SHORT $LN4@WndProc
$LN6@WndProc:
; Line 172
	mov	esi, esp
	push	0
	push	OFFSET ?About@@YGHPAUHWND__@@IIJ@Z	; About
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	push	103					; 00000067H
	mov	ecx, DWORD PTR ?hInst@@3PAUHINSTANCE__@@A ; hInst
	push	ecx
	call	DWORD PTR __imp__DialogBoxParamA@20
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 173
	jmp	SHORT $LN7@WndProc
$LN5@WndProc:
; Line 175
	mov	esi, esp
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__DestroyWindow@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 176
	jmp	SHORT $LN7@WndProc
$LN4@WndProc:
; Line 178
	mov	esi, esp
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _message$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__DefWindowProcA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN12@WndProc
$LN7@WndProc:
; Line 180
	jmp	SHORT $LN10@WndProc
$LN3@WndProc:
; Line 182
	mov	esi, esp
	lea	eax, DWORD PTR _ps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__BeginPaint@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _hdc$[ebp], eax
; Line 184
	mov	esi, esp
	lea	eax, DWORD PTR _ps$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hWnd$[ebp]
	push	ecx
	call	DWORD PTR __imp__EndPaint@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 185
	jmp	SHORT $LN10@WndProc
$LN2@WndProc:
; Line 187
	mov	esi, esp
	push	0
	call	DWORD PTR __imp__PostQuitMessage@4
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 188
	jmp	SHORT $LN10@WndProc
$LN1@WndProc:
; Line 190
	mov	esi, esp
	mov	eax, DWORD PTR _lParam$[ebp]
	push	eax
	mov	ecx, DWORD PTR _wParam$[ebp]
	push	ecx
	mov	edx, DWORD PTR _message$[ebp]
	push	edx
	mov	eax, DWORD PTR _hWnd$[ebp]
	push	eax
	call	DWORD PTR __imp__DefWindowProcA@16
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN12@WndProc
$LN10@WndProc:
; Line 192
	xor	eax, eax
$LN12@WndProc:
; Line 193
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN16@WndProc
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 308				; 00000134H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
	npad	1
$LN16@WndProc:
	DD	1
	DD	$LN15@WndProc
$LN15@WndProc:
	DD	-96					; ffffffa0H
	DD	64					; 00000040H
	DD	$LN14@WndProc
$LN14@WndProc:
	DB	112					; 00000070H
	DB	115					; 00000073H
	DB	0
?WndProc@@YGJPAUHWND__@@IIJ@Z ENDP			; WndProc
_TEXT	ENDS
EXTRN	__imp__EndDialog@8:PROC
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?About@@YGHPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
tv64 = -196						; size = 4
_hDlg$ = 8						; size = 4
_message$ = 12						; size = 4
_wParam$ = 16						; size = 4
_lParam$ = 20						; size = 4
?About@@YGHPAUHWND__@@IIJ@Z PROC			; About, COMDAT
; Line 197
	push	ebp
	mov	ebp, esp
	sub	esp, 196				; 000000c4H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 49					; 00000031H
	mov	eax, -858993460				; ccccccccH
	rep stosd
; Line 199
	mov	eax, DWORD PTR _message$[ebp]
	mov	DWORD PTR tv64[ebp], eax
	cmp	DWORD PTR tv64[ebp], 272		; 00000110H
	je	SHORT $LN4@About
	cmp	DWORD PTR tv64[ebp], 273		; 00000111H
	je	SHORT $LN3@About
	jmp	SHORT $LN5@About
$LN4@About:
; Line 202
	mov	eax, 1
	jmp	SHORT $LN7@About
$LN3@About:
; Line 205
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 1
	je	SHORT $LN1@About
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	cmp	ecx, 2
	jne	SHORT $LN5@About
$LN1@About:
; Line 207
	mov	eax, DWORD PTR _wParam$[ebp]
	and	eax, 65535				; 0000ffffH
	movzx	ecx, ax
	mov	esi, esp
	push	ecx
	mov	edx, DWORD PTR _hDlg$[ebp]
	push	edx
	call	DWORD PTR __imp__EndDialog@8
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 208
	mov	eax, 1
	jmp	SHORT $LN7@About
$LN5@About:
; Line 212
	xor	eax, eax
$LN7@About:
; Line 213
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 196				; 000000c4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?About@@YGHPAUHWND__@@IIJ@Z ENDP			; About
_TEXT	ENDS
END
