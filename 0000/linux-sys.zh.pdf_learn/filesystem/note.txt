001 一个磁盘可以划分为多个分区，每个分区不需先进行格式化为特定的文件系统，才能存储文件。
	格式化的过程就是在磁盘上写一些管理存储布局的信息。
002 文件系统中存储的最小单位是块，一个块多大在格式化时确定。
003 启动快的大小是确定的，为1KB，由PC标准规定的。用来存储磁盘分区信息和启动信息。
	任何文件系统都不能使用启动块，启动块之后才是文件系统的开始。
004 每个块组由以下部分组成
	超级块，描述整个分区的文件系统信息，块大小，文件系统版本号，上次mount时间。超级块在每个块组的开头都有一份拷贝
	块组描述符表，由很多块组描述符组成，整个分区分成多少个块组就对应有多少个块组描述符。每个块组描述符（Group Descriptor）
	存储一个块组的描述信息，例如在这个块组中从哪里开始是inode表，从哪里开始是数据块，空闲的inode和数据块还有多少个等等。和
	超级块类似，块组描述符表在每个块组的开头也都有一份拷贝，这些信息是非常重要的，一旦超级块意外损坏就会丢失整个分区的数据，
	一旦块组描述符意外损坏就会丢失整个块组的数据，因此它们都有多份拷贝。通常内核只用到第0个块组中的拷贝，当执行e2fsck检查
	文件系统一致性时，第0个块组中的超级块和块组描述符表就会拷贝到其它块组，这样当第0个块组的开头意外损坏时就可以用其它拷贝
	来恢复，从而减少损失。
	块位图（Block Bitmap） 一个块组中的块是这样利用的：数据块存储所有文件的数据，比如某个分区的块大小是1024字节，某个文件
	是2049字节，那么就需要三个数据块来存，即使第三个块只存了一个字节也需要占用一个整块；超级块、块组描述符表、块位文件系统
	图、inode位图、inode表这几部分存储该块组的描述信息。那么如何知道哪些块已经用来存储文件数据或其它描述信息，哪些块仍然空
	闲可用呢？块位图就是用来描述整个块组中哪些块已用哪些块空闲的，它本身占一个块，其中的每个bit代表本块组中的一个块，这个
	bit为1表示该块已用，这个bit为0表示该块空闲可用。
	df命令统计磁盘信息快，每次只需查看组块的块位图，不是搜索整个分区，du命令查看较大目录比较慢，需要搜索整个目录的所有文件
	inode位图（inode Bitmap） 和块位图类似，本身占一个块，其中每个bit表示一个
	inode是否空闲可用。
	inode表（inode Table） 我们知道，一个文件除了数据需要存储之外，一些描述信息
	也需要存储，例如文件类型（常规、目录、符号链接等），权限，文件大小，创建/修改/访
	问时间等，也就是ls -l命令看到的那些信息，这些信息存在inode中而不是数据块中。每个
	文件都有一个inode，一个块组中的所有inode组成了inode表。
	inode表占多少个块在格式化时就要决定并写入块组描述符中，mke2fs格式化工具的默
	认策略是一个块组有多少个8KB就分配多少个inode。由于数据块占了整个块组的绝大部分，
	也可以近似认为数据块有多少个8KB就分配多少个inode，换句话说，如果平均每个文件的大
	小是8KB，当分区存满的时候inode表会得到比较充分的利用，数据块也不浪费。如果这个分
	区存的都是很大的文件（比如电影），则数据块用完的时候inode会有一些浪费，如果这个
	分区存的都是很小的文件（比如源代码），则有可能数据块还没用完inode就已经用完了，
	数据块可能有很大的浪费。如果用户在格式化时能够对这个分区以后要存储的文件大小做一
	个预测，也可以用mke2fs的-i参数手动指定每多少个字节分配一个inode。
	数据块（Data Block） 根据不同的文件类型有以下几种情况
	对于常规文件，文件的数据存储在数据块中。
	对于目录，该目录下的所有文件名和目录名存储在数据块中，注意文件名保存在它所在
	目录的数据块中，除文件名之外，ls -l命令看到的其它信息都保存在该文件的inode中。注
	意这个概念：目录也是一种文件，是一种特殊类型的文件。
	对于符号链接，如果目标路径名较短则直接保存在inode中以便更快地查找，如果目标
	路径名较长则分配一个数据块来保存。