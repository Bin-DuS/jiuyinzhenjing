基本特征
	1.并发 宏观上运行多个程序，并行（同时运行多条指令，需要硬件支持）
		   操作系统引入进程，线程实现程序并发运行
	2.共享 系统中的资源可以被多个并发进程共同使用。共享内存-进程间通信
		   两种方式，互斥（临界资源），同时
	3.虚拟 一个屋里实体转换为多个逻辑实体 时分复用，空分复用
	4.异步 进程以不可知的速度执行，不是一次性执行完毕
基本功能
	1.进程管理，进程控制，进程同步，进程通信，死锁处理，处理机调度
	2.内存管理，内存分配，地址映射，内存保护与共享，虚拟内存，内存命中
	3.文件管理，文件存储空间管理，目录管理，文件读写管理和保护
	4.设备管理，完成用户的IO请求，方便用户使用各种设备
系统调用
	用户态需要使用内核态的功能，进行系统调用从而陷入内核，由操作系统代为完成
	主要有进程控制，进程通信，文件操作，设备操作，信息维护，安全
大内核和微内核
	大内核将操作系统功能作为一个紧密结合的整体放到内核，由各模块共享信息，具有很高的性能。
	微内核将部分操作系统功能移出内核，降低内核复杂性，移出的部分根据分层原则划分为服务，相互独立。
中断分类
	1.外中断，CPU指令意外的中断，IO中断，时钟中断，控制台中断
	2.异常，由CPU执行指令的内部事件引起，非法操作码，地址越界，算术溢出。
	3.陷入 在用户程序中使用系统调用
进程管理
	进程与线程
		1.进程 是资源分配的基本单位，
		2.进程控制块描述进程的基本信息和运行状态，创建撤销进程就是对进程控制块操作
		3.线程 是独立调度的基本单位
		4.一个进程中可以有多个线程，共享资源
		5.线程进程的区别
			a.拥有资源，进程是资源分配的基本单位，但是线程不拥有资源，线程可以访问隶属进程的资源
			b.调度，线程是独立调度的基本单位，在同一进程中，线程切换不会引起进程切换，从一个进程
			  中的线程切换到另外一个进程中的线程会引起进程切换。
			c.系统开销，进程开销大，线程开销小
			d.通信，进程间需要进程同步和互斥手段的辅助保证数据的一致性，线程可以通过
			  直接读写进程的数据段（全局变量）来进行通信。
	进程状态切换
		创建 ---> 就绪 创建
		就绪 <--> 运行 被调度/时间片用完
		运行 ---> 销毁 退出
		运行 ---> 等待 IO或者等待事件
		等待 ---> 就绪 IO或者等待的事件发生
	调度算法
		1.批处理
			先来先服务，队列
			短作业优先
			最短剩余时间优先
		2.交互式
			时间片轮转
			优先级调度，防止低优先级永远等不到调度，可以随时间推移增加优先级
			多级反馈队列，每个队列的实际片大小不同，进程在第一个队列没有执行完会移到下一个队列
		3.实时系统 在确定的时间内得到响应，硬实时（满足绝对的截止时间），软实时（容忍一定的超时）
	进程同步 控制多个进程按照一定顺序执行
		1.临界区，对资源进行访问的代码
			沪指资源，进入进阶区前需要检查。
			资源锁
		2.同步/互斥：按照一定顺序执行/同一时刻只能一个进程进入临界区。
		3.信号量 整型变量，执行down(>0执行-1，等于0睡眠) up（+1）操作，需要加锁
		4.管程 一个时刻只能有一个进程使用管程
		5.读者-写者问题
		6.哲学家进餐问题
	进程通信 进程间传递信息。
		1.管道 pipe #include<unistd.h> int pip(int fd[2]);fd[0]读 fd[1]写
		   半双工，父子进程中使用
		2.命名管道 去除了只能在父子进程中使用的限制
		3.消息队列 独立于读写进程存在
		4.信号量
		5.共享存储 共享一个指定的存储区
		6.套接字
	死锁 互相等待对方持有的资源，形成一个环
		鸵鸟策略，假装没发生
		死锁检测和死锁恢复
		死锁恢复
			抢占恢复，回滚恢复，杀死进程恢复
		死锁预防
			破坏互斥条件，破坏占用等待条件 破坏不可抢占条件 破坏环路等待
内存管理
	虚拟内存 为了让物理内存扩充成更大的逻辑内存
	分页地址映射
	页面置换算法
		1.最佳，换出最长未访问
		2.最近最久未使用LRU
		3.最近未使用
		4.先进先出
		5.第二次机会，第一次清零，第二次置换
设备管理
	磁盘结构
	磁盘调度算法
		旋转时间，寻到时间，先来先服务，最短寻道时间，电梯算法
链接
	编译系统
	*.c->*.i->*.s->*.o->bin
	1.预处理器 处理#define #include以#开头的
	2.编译器   生成汇编程序
	3.汇编器as 生成而二进制目标文件
	4.链接器   链接其他二进制生成程序

		
		